[Unit]
Description=Minecraft Server %i
After=network.target

[Service]
# Ensure that the service process and all its children can never gain new
# privileges through execve()
NoNewPrivileges=true

# Any attempts to set the set-user-ID (SUID) or set-group-ID (SGID) bits on
# files or directories will be denied (for details on these bits see inode(7))
RestrictSUIDSGID=true

# Locks down the personality(2) system call so that the kernel execution domain
# may not be changed from the default or the personality selected with
# Personality= directive.
LockPersonality=true

# Users Database is not available from within the unit, only root and minecraft
# is available, everybody else is nobody
PrivateUsers=true

# Read only mapping of /usr /boot and /etc
ProtectSystem=full

# Sets up a new file system namespace for the executed processes and mounts
# private /tmp/ and /var/tmp/ directories inside it that are not shared by
# processes outside of the namespace
PrivateTmp=true

# Sets up a new /dev/ mount for the executed processes and only adds API pseudo
# devices such as /dev/null, /dev/zero or /dev/random (as well as the pseudo
# TTY subsystem) to it, but no physical devices such as /dev/sda, system memory
# /dev/mem, system ports /dev/port and others
# Implies DevicePolicy=closed
PrivateDevices=true

# /home, /root and /run/user seem to be empty from within the unit. It is
# recommended to enable this setting for all long-running services (in
# particular network-facing ones).
ProtectHome=true

# The Linux Control Groups (cgroups(7)) hierarchies accessible through
# /sys/fs/cgroup/ will be made read-only to all processes of the unit. Except
# for container managers no services should require write access to the control
# groups hierarchies
ProtectControlGroups=true

# Explicit module loading will be denied.
# Block module system calls, also /usr/lib/modules.
# Implies NoNewPrivileges=yes
ProtectKernelModules=true

# Kernel variables accessible through /proc/sys/, /sys/, /proc/sysrq-trigger,
# /proc/latency_stats, /proc/acpi, /proc/timer_stats, /proc/fs and /proc/irq
# will be made read-only to all processes of the unit
ProtectKernelTunables=true

# It is recommended to turn this on for most services.
# Implies MountAPIVFS=yes
ProtectControlGroups=true

# Restricts the set of socket address families accessible to the processes of
# this unit. Note that this restricts access to the socket(2) system call only.
# Sockets passed into the process by other means (for example, by using socket
# activation with socket units, see systemd.socket(5)) are unaffected.
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6 AF_NETLINK

# Restricts access to Linux namespace functionality for the processes of this
# unit. Access to any kind of namespacing is prohibited.
RestrictNamespaces=true

# Any attempts to enable realtime scheduling in a process of the unit are
# refused. This restricts access to realtime task scheduling policies such as
# SCHED_FIFO, SCHED_RR or SCHED_DEADLINE.
RestrictRealtime=true

# Attempts to create memory mappings that are writable and executable at the
# same time, or to change existing memory mappings to become executable, or
# mapping shared memory segments as executable, are prohibited
# JIT systems, like Java, need to mark memory as executable so this protection
# can not be used.
MemoryDenyWriteExecute=false

# Solves the issue where the minecraft server will endlessly restart itself
# For more info, see:
# https://askubuntu.com/questions/953920/systemctl-service-timed-out-during-start
Type=simple

WorkingDirectory={{ minecraft_home}}/%i
User={{ minecraft_user }}
Group={{ minecraft_group }}
ExecStart=/usr/local/bin/minecraft-server %i
ExecStop=/usr/local/bin/minecraft-server-stop %i
Restart=always

[Install]
WantedBy=default.target
